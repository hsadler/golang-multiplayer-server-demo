

TODO:
    X sketch out UX
    - sketch out API and data flow
    - sketch out backend game state modeling
    - sketch out Unity client architecture
    - POC server deployment to cloud service and deployment process
    - implement messaging mock API
    - implement players joining game, seeing each other's movement
    - implement food spawning, consumption, and player size increase
    - implement player eat player and player respawn
    - implement time per round and game reset
    - implement winning player and other player ranking


/////////// UX ///////////

1. player enters name to join active game
2. players eat food go grow bigger
3. bigger players can eat smaller players
4. players who are eaten respawn
5. players need to avoid mines which cause damage and therefor size decrease
6. each round has a time limit
7. at the end of each round, winner is declared and player's rank is displayed


/////////// SCHEMAS ///////////

Message Schema:
{
    messageType: <string>,
    payload_key <string>: payload_value <any>
}

Game State Schema:
{
    players: [<Player>, ...]
}

Player Schema:
{
    id: <UUID_str>,
    position: {
        x: <float>,
        y: <float>
    }
}

